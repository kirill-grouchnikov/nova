/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package dev.android.playground.nova.usage

import dev.android.playground.nova.core.base.color
import dev.android.playground.nova.core.base.postInit
import dev.android.playground.nova.core.framework.generated.android
import dev.android.playground.nova.core.framework.generated.background_light
import dev.android.playground.nova.core.framework.generated.colorAccent
import dev.android.playground.nova.core.framework.themes.initializeCoreDictionary

fun simpleCore() {

    theme(name = "MyMainTheme", parent = "Theme.Material.Light") {
        // Simple boolean attributes
        windowDrawsSystemBarBackgrounds = true
        windowActionModeOverlay = true

        windowLightStatusBar = true

        // Attributes that point to color resources
        statusBarColor = android.attr.colorAccent
        actionMenuTextColor = android.color.background_light

        // Inline widget style. The output will create a separate <style> entry with an
        // autogenerated name and correct parent name based on what is defined in the base
        // theme for this widget style
        actionModeStyle {
            background = color.action_mode_background
        }
    }
}

fun main() {
    initializeCoreDictionary()
    simpleCore()
    for (entry in postInit()) {
        println("*** " + entry.key + " ***")
        println(entry.value)
        println()
    }
}

