/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

version = '0.1-SNAPSHOT'

buildscript {
    ext {
        gradle_version                  =      '6.6'
        dokka_plugin_version            =   '0.10.1'
        kotlin_version                  =   '1.3.72'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlin_version}"
    }
}

wrapper {
    gradleVersion = "${rootProject.ext.gradle_version}"
}

allprojects {
    version = rootProject.version

    repositories {
        mavenCentral()
        jcenter()
    }

    defaultTasks 'build', 'jar'

    // Configure Java compilation for all the projects
    tasks.withType(JavaCompile) {
        // flag all usage of deprecated APIs as errors
        options.deprecation = true
        options.compilerArgs += ['-Werror']

        clean {
            delete 'out'     // interpreted relative to the project directory
        }

        disableAutoTargetJvm()
    }

    // Configure the jar task for all the projects
    tasks.withType(Jar) {
        // create reproducible builds by removing timestamps and doing cross-platform file order
        preserveFileTimestamps = false
        reproducibleFileOrder = true
        archiveBaseName = "${rootProject.name}-${project.name}"
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
        }
    }
}
